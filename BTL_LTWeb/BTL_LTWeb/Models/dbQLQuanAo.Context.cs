//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BTL_LTWeb.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QL_QUANAOEntities : DbContext
    {
        public QL_QUANAOEntities()
            : base("name=QL_QUANAOEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Cart> Carts { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<InvoiceDetail> InvoiceDetails { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
    
        [DbFunction("QL_QUANAOEntities", "Staff_GetAllProducts")]
        public virtual IQueryable<Staff_GetAllProducts_Result> Staff_GetAllProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Staff_GetAllProducts_Result>("[QL_QUANAOEntities].[Staff_GetAllProducts]()");
        }
    
        public virtual int CreateAccount(string account_name, string account_password, string role, string first_name, string last_name, string adr, string phone, string email)
        {
            var account_nameParameter = account_name != null ?
                new ObjectParameter("account_name", account_name) :
                new ObjectParameter("account_name", typeof(string));
    
            var account_passwordParameter = account_password != null ?
                new ObjectParameter("account_password", account_password) :
                new ObjectParameter("account_password", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var adrParameter = adr != null ?
                new ObjectParameter("adr", adr) :
                new ObjectParameter("adr", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateAccount", account_nameParameter, account_passwordParameter, roleParameter, first_nameParameter, last_nameParameter, adrParameter, phoneParameter, emailParameter);
        }
    
        public virtual int deleteProduct(string product_id)
        {
            var product_idParameter = product_id != null ?
                new ObjectParameter("Product_id", product_id) :
                new ObjectParameter("Product_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteProduct", product_idParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Staff_GetHistoryAccount_Result> Staff_GetHistoryAccount(string accountName)
        {
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Staff_GetHistoryAccount_Result>("Staff_GetHistoryAccount", accountNameParameter);
        }
    
        public virtual ObjectResult<Staff_GetInvoices_Result> Staff_GetInvoices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Staff_GetInvoices_Result>("Staff_GetInvoices");
        }
    
        public virtual ObjectResult<Staff_GetUserByAccountName_Result> Staff_GetUserByAccountName(string account_name)
        {
            var account_nameParameter = account_name != null ?
                new ObjectParameter("account_name", account_name) :
                new ObjectParameter("account_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Staff_GetUserByAccountName_Result>("Staff_GetUserByAccountName", account_nameParameter);
        }
    
        public virtual ObjectResult<Staff_loadAccountUser_Result> Staff_loadAccountUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Staff_loadAccountUser_Result>("Staff_loadAccountUser");
        }
    
        public virtual ObjectResult<Staff_loadInvoiceDetails_Result> Staff_loadInvoiceDetails(string invoice_id)
        {
            var invoice_idParameter = invoice_id != null ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Staff_loadInvoiceDetails_Result>("Staff_loadInvoiceDetails", invoice_idParameter);
        }
    
        public virtual int Staff_UpdateInvoice_Sta(string invoice_id, string new_status)
        {
            var invoice_idParameter = invoice_id != null ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(string));
    
            var new_statusParameter = new_status != null ?
                new ObjectParameter("new_status", new_status) :
                new ObjectParameter("new_status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Staff_UpdateInvoice_Sta", invoice_idParameter, new_statusParameter);
        }
    
        public virtual ObjectResult<ViewAccountStaff_Result> ViewAccountStaff(string account_name)
        {
            var account_nameParameter = account_name != null ?
                new ObjectParameter("account_name", account_name) :
                new ObjectParameter("account_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewAccountStaff_Result>("ViewAccountStaff", account_nameParameter);
        }
    
        public virtual ObjectResult<ViewAccountUser_Result> ViewAccountUser(string account_name)
        {
            var account_nameParameter = account_name != null ?
                new ObjectParameter("account_name", account_name) :
                new ObjectParameter("account_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewAccountUser_Result>("ViewAccountUser", account_nameParameter);
        }
    
        public virtual ObjectResult<ViewProducts_Result> ViewProducts(string product_name)
        {
            var product_nameParameter = product_name != null ?
                new ObjectParameter("Product_name", product_name) :
                new ObjectParameter("Product_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewProducts_Result>("ViewProducts", product_nameParameter);
        }
    
        public virtual ObjectResult<ViewQuanityWareHouse_Result> ViewQuanityWareHouse(string product_id)
        {
            var product_idParameter = product_id != null ?
                new ObjectParameter("Product_id", product_id) :
                new ObjectParameter("Product_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewQuanityWareHouse_Result>("ViewQuanityWareHouse", product_idParameter);
        }
    }
}
