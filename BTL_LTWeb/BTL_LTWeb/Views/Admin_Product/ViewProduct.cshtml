@model IEnumerable<BTL_LTWeb.Models.Product>

@{
    ViewBag.Title = "ViewProduct";
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
}
<style>
    .custom-link1 {
        color: white;
        text-decoration: none;
    }
</style>


@if (TempData["SuccessMessage"] != null)
{
    var successMessage = TempData["SuccessMessage"] as string;

    if (successMessage == "Product deleted successfully.")
    {
        <div class="alert alert-success">
            @successMessage
        </div>
    }
    else if (successMessage == "Product deleted failed.")
    {
        <div class="alert alert-warning">
            @successMessage
        </div>
    }
}



<link href="~/Assets/Admin/Assets/css/Product.css" rel="stylesheet" />
<div style="display: flex; width: 100%;">
    <form method="post" action="@Url.Action("ViewProduct", "Admin_Product")" class="nav-link mt-2 mt-md-0 d-none d-lg-flex search" id="searchForm">
        <input name="nameProduct" type="text" class="form-control full-width-input" placeholder="Search products" style="color: white;">
        <input name="page" id="currentPage" type="hidden" value="@ViewBag.CurrentPage" />
        <button type="submit">Search</button>
    </form>
    <button class="btn btn-success rounded-pill" onclick="openForm()">+ Add Product</button>

</div>
<div class="form-popup" id="myForm">
    <form style="padding:20px" class="form-container" id="addProductForm">
        <label style="color: black;" for="text"><b>Product_Name</b></label>
        <input type="text" placeholder="Enter Product Name" name="Product_Name" id="Product_Name" required>

        <label style="color: black;" for="text"><b>Product description</b></label>
        <input type="text" placeholder="Enter Product description" name="Product_description" id="Product_description" required>

        <label style="color: black;" for="text"><b>Product Price</b></label>
        <input type="text" placeholder="Enter Product Price" name="Product_Price" id="Product_Price" required>
        <br />
        <label style="color: black;" for="text"><b>Product_File Image</b></label>
        <input id="filebutton input-file" " name="Product_File" class="input-file" type="file" onchange="handleFileSelect(this)">

        <input type="hidden" name="FullImagePath" id="FullImagePath" />

        <div style="display:flex; justify-content:space-around">
            <button style="margin:20px" type="button" class="btn btn-primary btnAddProduct ">Create</button>
            <button style="margin:20px" type="button" class="btn btn-primary cancel" onclick="closeForm()">Close</button>
        </div>
    </form>
</div>


<table id="productTable" class="table">
    <tr>
        <th>
            Image
        </th>
        <th>
            Name
        </th>
        <th>
            @Html.DisplayNameFor(model => model.description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.price)
        </th>
        <th>

        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                <img src="@BTL_LTWeb.Models.ImagePathHelper.path/@item.image_url" alt="Alternate Text" style="width: 150px; height: 150px;" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.product_name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.price)
            </td>

            <td>
                <div style=" display:flex">
                    <button style="margin-right:10px" type="button" class="btn btn-success">
                        <a class="open_button1 custom-link1" href="javascript:void(0);" onclick="openEditProductModal(@item.product_id)">Edit</a>
                    </button>
                    <button type="button" class="btn btn-warning" style="background-color:red">
                        @Html.ActionLink("Delete", "Delete", new { id = item.product_id }, new { @class = "delete-link custom-link1" })
                    </button>


                </div>
            </td>
        </tr>
    }

</table>

<!-- Add this at the bottom of your ViewProduct.cshtml file -->
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">

        <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
            @Html.ActionLink("Previous", "ViewProduct", new { page = ViewBag.CurrentPage - 1, nameProduct = ViewBag.NameProduct }, new { @class = "page-link" })
        </li>

        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                @Html.ActionLink(i.ToString(), "ViewProduct", new { page = i, nameProduct = ViewBag.NameProduct }, new { @class = "page-link" })
            </li>
        }
        <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
            @Html.ActionLink("Next", "ViewProduct", new { page = ViewBag.CurrentPage + 1, nameProduct = ViewBag.NameProduct }, new { @class = "page-link" })
        </li>

    </ul>
</nav>

<div class="modal actives">
    <div class="modal__inner">
        <div style="display:flex;justify-content:center;color:black" class="modal__header">
            <h1>Update Product</h1>
            <i class="bx bx-x close-icon"></i>
        </div>
        <div class="modal__body">
            <form style="padding:20px" class="form-container" id="UpdateProductForm">
                <label style="color: black;" for="text"><b>Product_Name</b></label>
                <input type="text" placeholder="Enter Product Name" name="Product_Name" id="Product_Name_Update" required>

                <label style="color: black;" for="text"><b>Product description</b></label>
                <input type="text" placeholder="Enter Product description" name="Product_description" id="Product_description_Update" required>

                <label style="color: black;" for="text"><b>Product Price</b></label>
                <input type="text" placeholder="Enter Product Price" name="Product_Price" id="Product_Price_Update" required>
                <br />
                <label style="color: black;" for="text"><b>Product_File Image</b></label>
                <input style="width: 101px" id="inputFileUpdate" name="Product_File" class="input-file_Update" type="file">
                <label style="color:black" id="fileDisplayArea">fadsafd</label>
                <div style="display:flex; justify-content:space-around">
                    <button id="UpdateBtn" onclick="" style="margin:20px" type="button" class="btn btn-primary btnAddProduct ">Create</button>
                </div>
            </form>
        </div>
        <div class="modal__footer">
            <button class="close-button">Close</button>
        </div>
    </div>
</div>


@*<nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item"><a class="page-link" href="#">Previous</a></li>
            <li class="page-item"> <div class="page-link"> @Html.ActionLink("NextPage", "NextPage", new { /* id=item.PrimaryKey */ })</div>  </li>
        </ul>
    </nav>*@
<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<!-- DataTables CSS -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css">
<!-- DataTables JS -->
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>

@* api get product *@
<script>
    function UpdateProduct(productId) {
        var Product_Name = $('#Product_Name_Update').val();
        var Product_description = $('#Product_description_Update').val();
        var price = $('#Product_Price_Update').val();

        var img = $('#fileDisplayArea').html();
        var url = "/api/Admin_ProductApi";
        var data = JSON.stringify({ "id": productId, "name": Product_Name, "descript": Product_description, "price": price, "img": img });
        console.log(data);
        $.ajax({
            type: "PUT",
            data: data,
            url: url,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                alert(result);
            },
            error: function (result) {
                alert(result);
            }
        });
    }
    function openEditProductModal(productId) {
        $.ajax({
            url: '/api/Admin_ProductApi?id=' + productId,
            type: 'GET',
            success: function (data) {

                $('#Product_Name_Update').val(data.Name);
                $('#Product_description_Update').val(data.Descript);
                $('#Product_Price_Update').val(data.Price);
                $('#fileDisplayArea').html(data.Img)
                document.querySelector("#UpdateBtn").addEventListener("click", () => {
                    UpdateProduct(data.id)
                });

            },
            error: function () {
                alert('Error while fetching product data.');
            }
        });
    }

</script>
<script>
    function openForm() {
        document.getElementById("myForm").style.display = "block";
    }

    function closeForm() {
        document.getElementById("myForm").style.display = "none";
    }
    function updateCurrentPage() {
        var currentPage = document.getElementById("currentPage");
        if (currentPage) {
            currentPage.value = '@ViewBag.CurrentPage';
        }
    }
    var btn_open = document.querySelectorAll(".open_button1");
    var modal = document.querySelector(".modal");
    var close_icon = document.querySelector(".close-icon");
    var close_button = document.querySelector(".close-button");

    function hideModal() {
        if (modal.classList.contains("actives")) {
            modal.classList.remove("actives");
        } else {
            modal.classList.add("actives");
        }
    }
    btn_open.forEach(function (btn) {
        btn.addEventListener("click", hideModal);
    });
    close_button.addEventListener("click", hideModal);
    close_icon.addEventListener("click", hideModal);
    modal.addEventListener("click", hideModal);
    document.querySelector(".modal__inner").addEventListener("click", (e) => {
        hideModal();
    });
    window.onload = updateCurrentPage;

</script>
@* api add product *@
<script>

    function handleFileSelect(input) {
        if (input.files && input.files[0]) {
            var fullPath = input.files[0].name;

            var path = (window.URL || window.webkitURL).createObjectURL(input.files[0]);
            console.log('path', path);

            console.log(fullPath);
            document.getElementById("FullImagePath").value = fullPath;
        }
    }

    $(document).ready(function () {
        $(".delete-link").click(function (event) {
            var confirmed = confirm('Are you sure you want to delete this item?');
            if (!confirmed) {
                event.preventDefault();
            }
        });
    });
    function btnClick() {
        var Product_Name = $('#Product_Name').val();
        var Product_description = $('#Product_description').val();
        var price = $('#Product_Price').val();
        var img = $('.input-file').val();
        var url = "/api/Admin_ProductApi";
        var data = JSON.stringify({ "name": Product_Name, "descript": Product_description, "price": price, "img": img });
        console.log(data);
        $.ajax({
            type: "POST",
            data: data,
            url: url,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                alert(result);
            },
            error: function (result) {
                alert(result);
            }
        });
    }

    document.querySelector(".btnAddProduct").addEventListener("click", btnClick);
</script>
<script>
    // Lắng nghe sự kiện change của input file
    document.getElementById('inputFileUpdate').addEventListener('change', displayFileName);

    function displayFileName() {
        var fileInput = document.getElementById('inputFileUpdate');
        var fileDisplayArea = document.getElementById('fileDisplayArea');

        // Kiểm tra xem người dùng đã chọn tệp tin chưa
        if (fileInput.files.length > 0) {
            // Lấy tên của tệp tin
            var fileName = fileInput.files[0].name;

            // Hiển thị tên tệp tin bên phải
            fileDisplayArea.innerHTML = fileName;
        } else {
            // Nếu người dùng chưa chọn tệp tin
            fileDisplayArea.innerHTML = 'Vui lòng chọn một tệp tin.';
        }
    }
</script>